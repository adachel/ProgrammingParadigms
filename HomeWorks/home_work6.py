# Бинарный поиск
# Контекст.
# Предположим, что мы хотим найти элемент в массиве (получить его индекс).
# Мы можем это сделать просто перебрав все элементы. Но что, если массив уже отсортирован?
# В этом случае можно использовать бинарный поиск.
# Принцип прост: сначала берём элемент находящийся посередине и сравниваем с тем, который мы хотим найти.
# Если центральный элемент больше нашего, рассматриваем массив слева от центрального,
# а если больше - справа и повторяем так до тех пор, пока не найдем наш элемент.
from operator import index


# Ваша задача.
# Написать программу на любом языке в любой парадигме для бинарного поиска.
# На вход подаётся целочисленный массив и число.
# На выходе - индекс элемента или -1, в случае если искомого элемента нет в массиве.

def binary_search(arr, element):
    new_arr = arr
    mid = len(new_arr)
    while mid > 0:
        mid = len(new_arr) // 2
        if new_arr[mid] == element:
            return arr.index(element)
        if new_arr[mid] > element:
            new_arr = new_arr[:mid]
            continue
        else:
            new_arr = new_arr[mid:]
            continue
    return -1


arr = [2, 3, 4, 5, 6, 7, 8, 9, 10 ,11 ,12]
element = 1

index_element = binary_search(arr, element)
print(index_element)