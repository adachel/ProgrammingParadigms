# Task1. Нормализация данных. Функциональная парадигма.
# Контекст.
# Есть такая операция в статистике - “нормализация”. Это операция принимающая на вход вектор и возвращающая другой вектор.
# Смысл этой операции в том, чтобы данные из разных шкал загнать в единый диапазон, как правило - от 0 до 1,
# тогда с данными становится проще работать.
# Ваша задача.
# Реализовать с использованием функциональной парадигмы процедуру normalization,
# которая выполняет нормализацию полученного массива по приведенной формуле нормализованного значения элемента,
# где
#   ○ x_norm - нормализованное значение элемента
#   ○ x - исходное значение элемента
#   ○ x_max, x_min - максимальное и минимальное значение в массиве
# Формула: x_norm = (х - х_min) / (x_max - x_min)

def normalization(arr):
    x_max = max(arr)
    x_min = min(arr)

    def normalize_element(x):
        return (x - x_min) / (x_max - x_min)

    return list(map(normalize_element, arr))


# Task2. Фильтрация данных. Функциональная парадигма.
# Контекст.
# Предположим, что есть какой-то массив содержащий данные о разных людях и их возрасте
# и вас попросили ответить на следующий вопрос: “сколько в массиве людей возраста > 30?”.
# Для этого, вы хотите написать программу для фильтрации наблюдений по возрастному признаку.
# Ваша задача.
# Написать скрипт принимающий на вход массив с данными о людях и число - возраст,
# а возвращающий число - количество людей старше указанного возраста.

people = [{'name': 'Elizaveta','age': 25},
          {'name': 'Vasiliy','age': 30},
          {'name': 'Sergey','age': 35},
          {'name': 'Ivan','age': 40}]

def filter_by_age(people: list, min_age: int) -> list:
    return list(filter(lambda x: x['age'] >min_age, people))


# Task3. Поиск дубликатов.
# Контекст Важнейшая задача в анализе данных - поиск дубликатов.
# Дубликат - это наблюдение, встречающееся в данных больше одного раза.
# Такие наблюдения не просто не улучшают результат анализа или полученных моделей,
# но и замедляют весь процесс в целом,
# поэтому аналитики и разработчики предпочитают избавляться от них перед тем как приступить к анализу.
# Ваша задача.
# Реализовать с использованием функциональной парадигмы процедуру для поиска дубликатов.
# На вход подается массив, где могут присутствовать дубликаты (а могут и не присутствовать).
# При применении к массиву, дубликаты должны быть выведены на экран в виде списка.

def find_duplicates(numbers):
    unique_numbers = set()
    return list(filter(lambda x: x in unique_numbers or unique_numbers.add(x), numbers))

numbers = [1, 2, 3, 2, 4, 5, 3, 6, 6]
duplicates = find_duplicates(numbers)

